{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","value","selected","map","c","i","name","phone","AppointmentForm","title","setTitle","setContact","contact","date","setDate","time","setTime","handleSubmit","onSubmit","type","target","required","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","data","values","Object","className","v","TileList","tiles","AppointmentsPage","appointments","addAppointment","useState","e","preventDefault","ContactForm","setName","setPhone","email","setEmail","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","find","style","fontWeight","color","App","setContacts","setAppointments","ROUTES","to","activeClassName","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aefac046.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({ contacts, onChange }) => {\r\n  return (\r\n    <select onChange={onChange}>\r\n      <option key={-1} value={null} selected>\r\n        Select a contact\r\n      </option>\r\n      {contacts.map((c, i) => (\r\n        <option key={i} value={c.name}>{c.name} ({c.phone})</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={({target: { value }}) => setTitle(value)}\r\n        required\r\n        placeholder=\"Title\"\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        value={date}\r\n        onChange={({target: { value }}) => setDate(value)}\r\n        required\r\n        placeholder=\"Date\"\r\n        min={getTodayString()}\r\n      />\r\n      <input\r\n        type=\"time\"\r\n        value={time}\r\n        onChange={({target: { value }}) => setTime(value)}\r\n        required\r\n        placeholder=\"Time\"\r\n      />\r\n      <ContactPicker contacts={contacts} onChange={({target: { value }}) => setContact(value)} />\r\n      <input type=\"submit\" value=\"Add appointment\" />\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({ data }) => {\r\n  const values = Object.values(data);\r\n\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {values.map((v, i) => <p key={i} className={i === 0 ? \"tile-title\" : \"tile\"}>{v}</p>)}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = ({ tiles }) => {\r\n  return (\r\n    <div>\r\n      {tiles.map((c, i) => <Tile key={i} data={c} />)}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({ appointments, contacts, addAppointment }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addAppointment(title, contact, date, time);\r\n    setTitle(\"\");\r\n    setContact(\"\");\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          contacts={contacts}\r\n          title={title}\r\n          setTitle={setTitle}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          date={date}\r\n          setDate={setDate}\r\n          time={time}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList tiles={appointments} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={({target: { value }}) => setName(value)}\r\n        required\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        type=\"tel\"\r\n        value={phone}\r\n        onChange={({target: { value }}) => setPhone(value)}\r\n        pattern=\"[1-9][0-9]{2}-[1-9][0-9]{2}-[0-9]{4}\"\r\n        required\r\n        placeholder=\"Phone number (###-###-####)\"\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={({target: { value }}) => setEmail(value)}\r\n        required\r\n        placeholder=\"Email address\"\r\n      />\r\n      <input type=\"submit\" value=\"Add contact\" />\r\n    </form>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({ contacts, addContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate) {\r\n      addContact(name, phone, email);\r\n      setName(\"\");\r\n      setPhone(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isDuplicate = () => {\r\n      const result = contacts.find(contact => contact.name === name);\r\n      return (result ? true : false);\r\n    };\r\n\r\n    isDuplicate() ? setDuplicate(true) : setDuplicate(false);\r\n  }, [name, contacts, duplicate]);\r\n\r\n  const h2Style = { fontWeight: 400, color: \"red\" };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contacts{!duplicate || <span style={h2Style}> - Name already exists!</span>}</h2>\r\n        <ContactForm\r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  const addContact = (name, phone, email) => {\r\n    setContacts([\r\n      ...contacts,\r\n      { name: name, phone: phone, email: email }\r\n    ]);\r\n  };\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments([\r\n      ...appointments,\r\n      { title: title, contact: contact, date: date, time: time }\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage\r\n              contacts={contacts}\r\n              addContact={addContact}\r\n            />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage\r\n              contacts={contacts}\r\n              appointments={appointments}\r\n              addAppointment={addAppointment}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}